{"ast":null,"code":"import _objectSpread from \"/Users/stevenparrott/Documents/Projects/clayton/parrott-clayton-proj/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport createDataContext from \"./createDataContext\";\nimport listings from \"../data/listings\";\n\nvar dataReducer = function dataReducer(state, action) {\n  switch (action.type) {\n    case \"GET_DATA\":\n      return _objectSpread(_objectSpread({}, state), {}, {\n        data: action.payload.data,\n        totalLength: action.payload.totalLength\n      });\n\n    case \"EXTEND_LISTINGS\":\n      return _objectSpread(_objectSpread({}, state), {}, {\n        data: action.payload\n      });\n\n    case \"SORT_LISTINGS\":\n      return _objectSpread(_objectSpread({}, state), {}, {\n        data: action.payload.data,\n        priceSortValue: action.payload.priceSortValue\n      });\n\n    default:\n      return state;\n  }\n};\n\nvar getData = function getData(dispatch) {\n  return function () {\n    var data = listings.slice(0, 9);\n    dispatch({\n      type: \"GET_DATA\",\n      payload: {\n        data: data,\n        totalLength: listings.length\n      }\n    });\n  };\n};\n\nvar extendResults = function extendResults(dispatch) {\n  return function (_ref) {\n    var currentAmount = _ref.currentAmount;\n    var extendedListings = listings.slice(0, currentAmount += 3);\n    dispatch({\n      type: \"EXTEND_LISTINGS\",\n      payload: extendedListings\n    });\n  };\n};\n\nvar sortHomesByPrice = function sortHomesByPrice(dispatch) {\n  return function (_ref2) {\n    var priceSortValue = _ref2.priceSortValue;\n    var data = listings.slice(0, 9);\n    console.log(priceSortValue);\n\n    switch (priceSortValue) {\n      case \"low\":\n        data = data.sort(function (a, b) {\n          return parseInt(a.startingPrice) - parseInt(b.startingPrice);\n        });\n        dispatch({\n          type: \"SORT_LISTINGS\",\n          payload: {\n            data: data,\n            priceSortValue: priceSortValue\n          }\n        });\n\n      case \"high\":\n        data = data.sort(function (a, b) {\n          return parseInt(b.startingPrice) - parseInt(a.startingPrice);\n        });\n        dispatch({\n          type: \"SORT_LISTINGS\",\n          payload: {\n            data: data,\n            priceSortValue: priceSortValue\n          }\n        });\n\n      default:\n        break;\n    }\n  };\n};\n\nvar _createDataContext = createDataContext(dataReducer, {\n  getData: getData,\n  extendResults: extendResults,\n  sortHomesByPrice: sortHomesByPrice\n}, {\n  data: [],\n  totalLength: 200,\n  priceSortValue: \"\"\n}),\n    Provider = _createDataContext.Provider,\n    Context = _createDataContext.Context;\n\nexport { Provider, Context };","map":{"version":3,"sources":["/Users/stevenparrott/Documents/Projects/clayton/parrott-clayton-proj/src/context/DataContext.js"],"names":["createDataContext","listings","dataReducer","state","action","type","data","payload","totalLength","priceSortValue","getData","dispatch","slice","length","extendResults","currentAmount","extendedListings","sortHomesByPrice","console","log","sort","a","b","parseInt","startingPrice","Provider","Context"],"mappings":"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","sourcesContent":["import createDataContext from \"./createDataContext\";\nimport listings from \"../data/listings\"\n\nconst dataReducer = (state, action) => {\n  switch (action.type) {\n    case \"GET_DATA\":\n      return {...state, data: action.payload.data, totalLength: action.payload.totalLength}\n    case \"EXTEND_LISTINGS\":\n      return {...state, data: action.payload}\n    case \"SORT_LISTINGS\":\n      return {...state, data: action.payload.data, priceSortValue: action.payload.priceSortValue}\n    default:\n      return state;\n  }\n};\n\nconst getData = (dispatch) => () => {\n  const data = listings.slice(0,9)\n  dispatch({ type: \"GET_DATA\", payload: {data: data, totalLength: listings.length} })\n}\n\nconst extendResults = (dispatch) => ({ currentAmount }) => {\n  const extendedListings = listings.slice(0, currentAmount += 3)\n  dispatch({ type: \"EXTEND_LISTINGS\", payload: extendedListings })\n}\n\nconst sortHomesByPrice = (dispatch) => ({ priceSortValue }) => {\n  let data = listings.slice(0,9)\n  console.log(priceSortValue)\n  switch(priceSortValue) {\n    case \"low\":\n      data = data.sort((a,b) => parseInt(a.startingPrice) - parseInt(b.startingPrice))\n      dispatch({ type: \"SORT_LISTINGS\", payload: {data, priceSortValue} })\n    case \"high\":\n      data = data.sort((a,b) => parseInt(b.startingPrice) - parseInt(a.startingPrice))\n      dispatch({ type: \"SORT_LISTINGS\", payload: {data, priceSortValue} })\n    default:\n      break;  \n  }\n  \n}\n\nexport const { Provider, Context } = createDataContext(\n  dataReducer,\n  {getData, extendResults, sortHomesByPrice},\n  { data: [], totalLength: 200, priceSortValue: \"\" }\n);\n"]},"metadata":{},"sourceType":"module"}