{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport createDataContext from \"./createDataContext\";\nimport listings from \"../data/listings\";\n\nconst dataReducer = (state, action) => {\n  switch (action.type) {\n    case \"GET_DATA\":\n      return _objectSpread(_objectSpread({}, state), {}, {\n        data: action.payload.data,\n        totalLength: action.payload.totalLength,\n        priceSortValue: action.payload.priceSortValue\n      });\n\n    case \"EXTEND_LISTINGS\":\n      return _objectSpread(_objectSpread({}, state), {}, {\n        data: action.payload\n      });\n\n    case \"SORT_LISTINGS\":\n      return _objectSpread(_objectSpread({}, state), {}, {\n        data: action.payload.data,\n        priceSortValue: action.payload.priceSortValue\n      });\n\n    default:\n      return state;\n  }\n};\n\nconst getData = dispatch => () => {\n  dispatch({\n    type: \"GET_DATA\",\n    payload: {\n      data: listings.sort((a, b) => a.startingPrice - b.startingPrice).slice(0, 9),\n      totalLength: listings.length,\n      priceSortValue: \"low\"\n    }\n  });\n};\n\nconst extendResults = dispatch => ({\n  currentAmount\n}) => {\n  const extendedListings = listings.slice(0, currentAmount += 3);\n  dispatch({\n    type: \"EXTEND_LISTINGS\",\n    payload: extendedListings\n  });\n};\n\nconst sortHomesByPrice = dispatch => ({\n  priceSortValue\n}) => {\n  switch (priceSortValue) {\n    case \"low\":\n      dispatch({\n        type: \"SORT_LISTINGS\",\n        payload: {\n          data: listings.sort((a, b) => a.startingPrice - b.startingPrice).slice(0, 9),\n          priceSortValue\n        }\n      });\n      break;\n\n    case \"high\":\n      dispatch({\n        type: \"SORT_LISTINGS\",\n        payload: {\n          data: listings.sort((a, b) => b.startingPrice - a.startingPrice).slice(0, 9),\n          priceSortValue\n        }\n      });\n      break;\n\n    default:\n      break;\n  }\n};\n\nexport const {\n  Provider,\n  Context\n} = createDataContext(dataReducer, {\n  getData,\n  extendResults,\n  sortHomesByPrice\n}, {\n  data: [],\n  totalLength: 200,\n  priceSortValue: \"\"\n});","map":{"version":3,"sources":["/Users/stevenparrott/Documents/Projects/clayton/parrott-clayton-proj/src/context/DataContext.js"],"names":["createDataContext","listings","dataReducer","state","action","type","data","payload","totalLength","priceSortValue","getData","dispatch","sort","a","b","startingPrice","slice","length","extendResults","currentAmount","extendedListings","sortHomesByPrice","Provider","Context"],"mappings":"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","sourcesContent":["import createDataContext from \"./createDataContext\";\nimport listings from \"../data/listings\";\n\nconst dataReducer = (state, action) => {\n  switch (action.type) {\n    case \"GET_DATA\":\n      return {\n        ...state,\n        data: action.payload.data,\n        totalLength: action.payload.totalLength,\n        priceSortValue: action.payload.priceSortValue,\n      };\n    case \"EXTEND_LISTINGS\":\n      return { ...state, data: action.payload };\n    case \"SORT_LISTINGS\":\n      return {\n        ...state,\n        data: action.payload.data,\n        priceSortValue: action.payload.priceSortValue,\n      };\n    default:\n      return state;\n  }\n};\n\nconst getData = (dispatch) => () => {\n  dispatch({\n    type: \"GET_DATA\",\n    payload: {\n      data: listings\n      .sort((a, b) => a.startingPrice - b.startingPrice).slice(0, 9),\n      totalLength: listings.length,\n      priceSortValue: \"low\",\n    },\n  });\n};\n\nconst extendResults = (dispatch) => ({ currentAmount }) => {\n  const extendedListings = listings.slice(0, (currentAmount += 3));\n  dispatch({ type: \"EXTEND_LISTINGS\", payload: extendedListings });\n};\n\nconst sortHomesByPrice = (dispatch) => ({ priceSortValue }) => {\n  switch (priceSortValue) {\n    case \"low\":\n      dispatch({\n        type: \"SORT_LISTINGS\",\n        payload: {\n          data: listings\n            .sort((a, b) => a.startingPrice - b.startingPrice).slice(0, 9),\n          priceSortValue,\n        },\n      });\n      break;\n    case \"high\":\n      dispatch({\n        type: \"SORT_LISTINGS\",\n        payload: {\n          data: listings\n            .sort((a, b) => b.startingPrice - a.startingPrice).slice(0, 9),\n          priceSortValue,\n        },\n      });\n      break;\n    default:\n      break;\n  }\n};\n\nexport const { Provider, Context } = createDataContext(\n  dataReducer,\n  { getData, extendResults, sortHomesByPrice },\n  { data: [], totalLength: 200, priceSortValue: \"\" }\n);\n"]},"metadata":{},"sourceType":"module"}