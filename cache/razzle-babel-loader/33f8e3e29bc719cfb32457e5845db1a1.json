{"ast":null,"code":"import { useEffect, useState } from \"react\";\n\nfunction getWindowDimensions() {\n  var _window = window,\n      width = _window.innerWidth,\n      height = _window.innerHeight;\n  console.log(window);\n  return {\n    width: width,\n    height: height\n  };\n}\n\nexport default function useWindowDimensions() {\n  var _useState = useState(getWindowDimensions()),\n      windowDimensions = _useState[0],\n      setWindowDimensions = _useState[1];\n\n  useEffect(function () {\n    function handleResize() {\n      setWindowDimensions(getWindowDimensions());\n    }\n\n    window.addEventListener(\"resize\", handleResize);\n    return function () {\n      return window.removeEventListener(\"resize\", handleResize);\n    };\n  }, []);\n  return windowDimensions;\n}","map":{"version":3,"sources":["/Users/stevenparrott/Documents/Projects/clayton/parrott-clayton-proj/src/hooks/getWindowDimensions.js"],"names":["useEffect","useState","getWindowDimensions","window","width","innerWidth","height","innerHeight","console","log","useWindowDimensions","windowDimensions","setWindowDimensions","handleResize","addEventListener","removeEventListener"],"mappings":"AAAA,SAAgBA,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;AAGA,SAASC,mBAAT,GAA+B;AAC7B,gBAAmDC,MAAnD;AAAA,MAAoBC,KAApB,WAAQC,UAAR;AAAA,MAAwCC,MAAxC,WAA2BC,WAA3B;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYN,MAAZ;AACA,SAAO;AACLC,IAAAA,KAAK,EAALA,KADK;AAELE,IAAAA,MAAM,EAANA;AAFK,GAAP;AAID;;AAED,eAAe,SAASI,mBAAT,GAA+B;AAC5C,kBAAgDT,QAAQ,CACtDC,mBAAmB,EADmC,CAAxD;AAAA,MAAOS,gBAAP;AAAA,MAAyBC,mBAAzB;;AAIAZ,EAAAA,SAAS,CAAC,YAAM;AACd,aAASa,YAAT,GAAwB;AACtBD,MAAAA,mBAAmB,CAACV,mBAAmB,EAApB,CAAnB;AACD;;AAEDC,IAAAA,MAAM,CAACW,gBAAP,CAAwB,QAAxB,EAAkCD,YAAlC;AACA,WAAO;AAAA,aAAMV,MAAM,CAACY,mBAAP,CAA2B,QAA3B,EAAqCF,YAArC,CAAN;AAAA,KAAP;AACD,GAPQ,EAON,EAPM,CAAT;AASA,SAAOF,gBAAP;AACD","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nfunction getWindowDimensions() {\n  const { innerWidth: width, innerHeight: height } = window;\n  console.log(window)\n  return {\n    width,\n    height\n  };\n}\n\nexport default function useWindowDimensions() {\n  const [windowDimensions, setWindowDimensions] = useState(\n    getWindowDimensions()\n  );\n\n  useEffect(() => {\n    function handleResize() {\n      setWindowDimensions(getWindowDimensions());\n    }\n\n    window.addEventListener(\"resize\", handleResize);\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, []);\n\n  return windowDimensions;\n}"]},"metadata":{},"sourceType":"module"}